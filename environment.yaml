# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: myenv

channels:
  - pytorch
  - conda-forge
  - nvidia
  - defaults

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  - python=3.10
  - pytorch=2.*
  - torchvision=0.*
  - lightning=2.*
  - torchmetrics=0.*
  - hydra-core=1.*
  - rich=13.*
  - pre-commit=3.*
  - pytest=7.*
  # ours
  - pytorch-cuda=12.1
  - matplotlib=3.7.1
  - seaborn=0.12.2
  - pip>=23
  - pip:
    - torch==2.1.0
    - POT==0.9.3
    - geoopt==0.5.0
    - torch-ema==0.3
    - dirichlet==0.9
    - einops==0.7.0
    - wandb==0.16.5
    - geomstats==2.7.0
    - ipdb==0.13.13
    - rdkit==2023.9.5
    - torch_geometric==2.5.3
    - selene-sdk==0.4.4
    - pyBigWig==0.3.22
    - pyranges==0.0.129
    - cooler==0.9.3
    - cooltools==0.7.0
    - torchdiffeq==0.2.3
    - hydra-optuna-sweeper
    - hydra-colorlog
    - rootutils


  # --------- loggers --------- #
  # - wandb
  # - neptune-client
  # - mlflow
  # - comet-ml
  # - aim>=3.16.2 # no lower than 3.16.2, see https://github.com/aimhubio/aim/issues/2550

